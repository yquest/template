plugins {
  id 'application'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}

dependencies {
  implementation project(':web:rest')
  api project(':web:shared')
  
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-config-yaml:$vertxVersion"
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testImplementation "io.vertx:vertx-web-client:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"

}

distributions {
  main {
    baseName = 'template'
    contents {
      from 'conf'
    }
  }
}

def mainVerticleName = 'pt.fabm.template.MainVerticle'
def modulesToWatch = ['rest','memory-dao','shared']
def watchForChange = "src/**/*, ${modulesToWatch.collect {"../$it/src/**/*"}.join(', ')}"
logger.info(watchForChange)
def doOnChange = '../../gradlew :web:main:assemble'
def conf = "${project.rootProject.projectDir}/conf"
def serverPort = 8081

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName","-Dconf=$conf","-Dserver.port=$serverPort", "--on-redeploy=$doOnChange"]
}

task debugApp(type:JavaExec) {
  main = 'io.vertx.core.Launcher'
  classpath = sourceSets.main.runtimeClasspath
  args('run', mainVerticleName)
  systemProperty('server.port', serverPort)
  systemProperty('conf', conf)
  debug = true
}
