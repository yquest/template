import org.apache.tools.ant.filters.ReplaceTokens
buildscript {
  ext {
    sqlDriverVersion = '42.2.5'
  }
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.postgresql:postgresql:${sqlDriverVersion}"
    classpath group: 'org.yaml', name: 'snakeyaml', version: '1.24'
  }
}

dependencies {
  implementation project(':web:shared')

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-config-yaml:$vertxVersion"
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
  implementation group: 'org.postgresql', name: 'postgresql', version: sqlDriverVersion
  api "io.vertx:vertx-config:$vertxVersion"
  api "io.vertx:vertx-config-yaml:$vertxVersion"

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testImplementation "io.vertx:vertx-web-client:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

if (!project.hasProperty('db.driver')) project.ext['db.driver'] = 'org.postgresql.Driver'

def sqlVersion = 'v0_0_1'

processResources {
  filter ReplaceTokens, tokens: [
    "db.driver": project.property("db.driver"),
    "db.url": project.property("db.url"),
    "db.user": project.property("db.user"),
    "db.password": project.property("db.password"),
  ]
}


task updateSql() {
  doLast {
    ant.sql(
      classpath: buildscript.configurations.classpath.asPath,
      driver: project.property('db.driver'),
      url: project.property('db.url'),
      userid: project.property('db.user'),
      password: project.property('db.password'),
      src: "sql/${sqlVersion}/update.sql"
    )
  }
}
